/*!
 * GitHub Activity Stream - v0.1.0 - 7/28/2014
 * https://github.com/caseyscarborough/github-activity
 *
 * Copyright (c) 2014 Casey Scarborough
 * MIT License
 * http://opensource.org/licenses/MIT
 */
;var GitHubActivity=(function(){var b={};var a={renderLink:function(d,e,c){if(!e){e=d}if(typeof(c)==="undefined"){c=""}return Mustache.render('<a class="'+c+'" href="{{url}}" target="_blank">{{{title}}}</a>',{url:d,title:e})},renderGitHubLink:function(d,e,c){if(!e){e=d}if(typeof(c)==="undefined"){c=""}return a.renderLink("https://github.com/"+d,e,c)},getMessageFor:function(h){var e=h.payload;h.repoLink=a.renderGitHubLink(h.repo.name);h.userGravatar=Mustache.render('<div class="gha-gravatar-user"><img src="{{url}}" class="gha-gravatar-small"></div>',{url:h.actor.avatar_url});if(e.ref){if(e.ref.substring(0,11)==="refs/heads/"){h.branch=e.ref.substring(11)}else{h.branch=e.ref}h.branchLink=a.renderGitHubLink(h.repo.name+"/tree/"+h.branch,h.branch)+" at "}if(e.commits){var l=e.before+"..."+e.head;var f=e.commits.length;if(f===2){h.commitsMessage=Mustache.render('<a href="https://github.com/{{repo}}/compare/{{shaDiff}}">View comparison for these 2 commits &raquo;</a>',{repo:h.repo.name,shaDiff:l})}else{if(f>2){h.commitsMessage=Mustache.render('<a href="https://github.com/{{repo}}/compare/{{shaDiff}}">{{length}} more '+pluralize("commit",f-2)+" &raquo;</a>",{repo:h.repo.name,shaDiff:l,length:e.size-2})}}e.commits.forEach(function(o,n){if(o.message.length>66){o.message=o.message.substring(0,66)+"..."}if(n<2){o.shaLink=a.renderGitHubLink(h.repo.name+"/commit/"+o.sha,o.sha.substring(0,6),"gha-sha");o.committerGravatar=Mustache.render('<img class="gha-gravatar-commit" src="https://gravatar.com/avatar/{{hash}}?s=30&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="16" />',{hash:md5(o.author.email)})}else{e.commits.splice(2,e.size);return false}})}if(e.issue){var k=h.repo.name+"#"+e.issue.number;h.issueLink=a.renderLink(e.issue.html_url,k);h.issueType="issue";if(e.issue.pull_request){h.issueType="pull request"}}if(e.pull_request){var d=e.pull_request;h.pullRequestLink=a.renderLink(e.html_url,h.repo.name+"#"+d.number);h.mergeMessage="";if(e.pull_request.merged){e.action="merged";var m="{{c}} "+pluralize("commit",d.commits)+" with {{a}} "+pluralize("addition",d.additions)+" and {{d}} "+pluralize("deletion",d.deletions);h.mergeMessage=Mustache.render('<br><small class="gha-message-merge">'+m+"</small>",{c:d.commits,a:d.additions,d:d.deletions})}}if(e.comment&&e.comment.pull_request_url){var k=h.repo.name+"#"+e.comment.pull_request_url.split("/").pop();h.pullRequestLink=a.renderGitHubLink(e.comment.pull_request_url,k)}if(e.comment&&e.comment.body){h.comment=e.comment.body;if(h.comment.length>150){h.comment=h.comment.substring(0,150)+"..."}if(e.comment.html_url&&e.comment.commit_id){var k=h.repo.name+"@"+e.comment.commit_id.substring(0,10);h.commentLink=a.renderLink(e.comment.html_url,k)}}if(h.type==="ReleaseEvent"){h.tagLink=a.renderLink(e.release.html_url,e.release.tag_name);h.zipLink=a.renderLink(e.release.zipball_url,"Download Source Code (zip)")}if(h.type==="GollumEvent"){var i=e.pages[0];h.actionType=i.action;h.message=h.actionType.charAt(0).toUpperCase()+h.actionType.slice(1)+" ";h.message+=a.renderGitHubLink(i.html_url,i.title)}if(h.type==="FollowEvent"){h.targetLink=a.renderGitHubLink(e.target.login)}if(h.type==="ForkEvent"){h.forkLink=a.renderGitHubLink(e.forkee.full_name)}if(h.type==="MemberEvent"){h.memberLink=a.renderGitHubLink(e.member.login)}if(e.gist){h.actionType=e.action==="fork"?e.action+"ed":e.action+"d";h.gistLink=a.renderLink(e.gist.html_url,"gist: "+e.gist.id)}var m=Mustache.render(templates[h.type],h);var c=millisecondsToStr(new Date()-new Date(h.created_at));var j;if(h.type=="CreateEvent"&&(["repository","branch","tag"].indexOf(e.ref_type)>=0)){j=icons[h.type+"_"+e.ref_type]}else{j=icons[h.type]}var g={message:m,icon:j,timeString:c,userLink:a.renderGitHubLink(h.actor.login)};if(singleLineActivities.indexOf(h.type)>-1){return Mustache.render(templates.SingleLineActivity,g)}return Mustache.render(templates.Activity,g)},getHeaderHTML:function(c){if(c.name){c.userNameLink=a.renderLink(c.html_url,c.name)}else{c.withoutName=" without-name"}c.userLink=a.renderLink(c.html_url,c.login);c.gravatarLink=a.renderLink(c.html_url,'<img src="'+c.avatar_url+'">');return Mustache.render(templates.UserHeader,c)},getActivityHTML:function(e,c){var g="";var f=e.length;if(c&&c>f){c=f}c=c?c:f;if(c===0){return Mustache.render(templates.NoActivity,{})}for(var d=0;d<c;d++){g+=a.getMessageFor(e[d])}return g},getOutputFromRequest:function(c,e){var g,f,d=new XMLHttpRequest();d.open("GET",c,false);d.onload=function(){if(d.status>=200&&d.status<400){f=JSON.parse(d.responseText);g=e(f)}else{return false}};d.onerror=function(){console.log("An error occurred connecting to the url.")};d.send();return g},renderStream:function(c,d){d.innerHTML=Mustache.render(templates.Stream,{text:c,footer:templates.Footer});d.style.position="relative"}};b.feed=function(m){if(!m.username||!m.selector){throw"You must specify the username and selector options for the activity stream.";return false}var g=m.selector,f="https://api.github.com/users/"+m.username,d=f+"/events",e,c;if(!!m.repository){d="https://api.github.com/repos/"+m.username+"/"+m.repository+"/events"}if(m.clientId&&m.clientSecret){var k="?client_id="+m.clientId+"&client_secret="+m.clientSecret;f+=k;d+=k}if(typeof m.templates=="object"){for(var l in templates){if(typeof m.templates[l]=="string"){templates[l]=m.templates[l]}}}e=a.getOutputFromRequest(f,a.getHeaderHTML);if(e){var h;if(m.limit!="undefined"){h=parseInt(m.limit,10)}else{h=null}e+=a.getOutputFromRequest(d,function(i){return a.getActivityHTML(i,h)})}else{e=Mustache.render(templates.NotFound,{username:m.username})}c=g.charAt(0)==="#"?document.getElementById(g.substring(1)):document.getElementsByClassName(g.substring(1));if(c instanceof HTMLCollection){for(var j=0;j<c.length;j++){a.renderStream(e,c[j])}}else{a.renderStream(e,c)}};return b}());function millisecondsToStr(c){function b(j){return(j>1)?"s ago":" ago"}var i=Math.floor(c/1000);var e=Math.floor(i/31536000);if(e){return e+" year"+b(e)}var a=Math.floor((i%=31536000)/2592000);if(a){return a+" month"+b(a)}var h=Math.floor((i%=2592000)/86400);if(h){return h+" day"+b(h)}var f=Math.floor((i%=86400)/3600);if(f){return"about "+f+" hour"+b(f)}var d=Math.floor((i%=3600)/60);if(d){return d+" minute"+b(d)}var g=i%60;if(g){return g+" second"+b(g)}return"just now"}function pluralize(b,a){if(a!==1){return b+"s"}return b}function md5cycle(k,c){var d=k[0],l=k[1],a=k[2],b=k[3];d=ff(d,l,a,b,c[0],7,-680876936);b=ff(b,d,l,a,c[1],12,-389564586);a=ff(a,b,d,l,c[2],17,606105819);l=ff(l,a,b,d,c[3],22,-1044525330);d=ff(d,l,a,b,c[4],7,-176418897);b=ff(b,d,l,a,c[5],12,1200080426);a=ff(a,b,d,l,c[6],17,-1473231341);l=ff(l,a,b,d,c[7],22,-45705983);d=ff(d,l,a,b,c[8],7,1770035416);b=ff(b,d,l,a,c[9],12,-1958414417);a=ff(a,b,d,l,c[10],17,-42063);l=ff(l,a,b,d,c[11],22,-1990404162);d=ff(d,l,a,b,c[12],7,1804603682);b=ff(b,d,l,a,c[13],12,-40341101);a=ff(a,b,d,l,c[14],17,-1502002290);l=ff(l,a,b,d,c[15],22,1236535329);d=gg(d,l,a,b,c[1],5,-165796510);b=gg(b,d,l,a,c[6],9,-1069501632);a=gg(a,b,d,l,c[11],14,643717713);l=gg(l,a,b,d,c[0],20,-373897302);d=gg(d,l,a,b,c[5],5,-701558691);b=gg(b,d,l,a,c[10],9,38016083);a=gg(a,b,d,l,c[15],14,-660478335);l=gg(l,a,b,d,c[4],20,-405537848);d=gg(d,l,a,b,c[9],5,568446438);b=gg(b,d,l,a,c[14],9,-1019803690);a=gg(a,b,d,l,c[3],14,-187363961);l=gg(l,a,b,d,c[8],20,1163531501);d=gg(d,l,a,b,c[13],5,-1444681467);b=gg(b,d,l,a,c[2],9,-51403784);a=gg(a,b,d,l,c[7],14,1735328473);l=gg(l,a,b,d,c[12],20,-1926607734);d=hh(d,l,a,b,c[5],4,-378558);b=hh(b,d,l,a,c[8],11,-2022574463);a=hh(a,b,d,l,c[11],16,1839030562);l=hh(l,a,b,d,c[14],23,-35309556);d=hh(d,l,a,b,c[1],4,-1530992060);b=hh(b,d,l,a,c[4],11,1272893353);a=hh(a,b,d,l,c[7],16,-155497632);l=hh(l,a,b,d,c[10],23,-1094730640);d=hh(d,l,a,b,c[13],4,681279174);b=hh(b,d,l,a,c[0],11,-358537222);a=hh(a,b,d,l,c[3],16,-722521979);l=hh(l,a,b,d,c[6],23,76029189);d=hh(d,l,a,b,c[9],4,-640364487);b=hh(b,d,l,a,c[12],11,-421815835);a=hh(a,b,d,l,c[15],16,530742520);l=hh(l,a,b,d,c[2],23,-995338651);d=ii(d,l,a,b,c[0],6,-198630844);b=ii(b,d,l,a,c[7],10,1126891415);a=ii(a,b,d,l,c[14],15,-1416354905);l=ii(l,a,b,d,c[5],21,-57434055);d=ii(d,l,a,b,c[12],6,1700485571);b=ii(b,d,l,a,c[3],10,-1894986606);a=ii(a,b,d,l,c[10],15,-1051523);l=ii(l,a,b,d,c[1],21,-2054922799);d=ii(d,l,a,b,c[8],6,1873313359);b=ii(b,d,l,a,c[15],10,-30611744);a=ii(a,b,d,l,c[6],15,-1560198380);l=ii(l,a,b,d,c[13],21,1309151649);d=ii(d,l,a,b,c[4],6,-145523070);b=ii(b,d,l,a,c[11],10,-1120210379);a=ii(a,b,d,l,c[2],15,718787259);l=ii(l,a,b,d,c[9],21,-343485551);k[0]=add32(d,k[0]);k[1]=add32(l,k[1]);k[2]=add32(a,k[2]);k[3]=add32(b,k[3])}function cmn(a,j,k,l,b,i){j=add32(add32(j,a),add32(l,i));return add32((j<<b)|(j>>>(32-b)),k)}function ff(l,m,a,b,n,c,d){return cmn((m&a)|((~m)&b),l,m,n,c,d)}function gg(l,m,a,b,n,c,d){return cmn((m&b)|(a&(~b)),l,m,n,c,d)}function hh(l,m,a,b,n,c,d){return cmn(m^a^b,l,m,n,c,d)}function ii(l,m,a,b,n,c,d){return cmn(a^(m|(~b)),l,m,n,c,d)}function md51(j){txt="";var h=j.length,i=[1732584193,-271733879,-1732584194,271733878],f;for(f=64;f<=j.length;f+=64){md5cycle(i,md5blk(j.substring(f-64,f)))}j=j.substring(f-64);var g=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(f=0;f<j.length;f++){g[f>>2]|=j.charCodeAt(f)<<((f%4)<<3)}g[f>>2]|=128<<((f%4)<<3);if(f>55){md5cycle(i,g);for(f=0;f<16;f++){g[f]=0}}g[14]=h*8;md5cycle(i,g);return i}function md5blk(d){var f=[],e;for(e=0;e<64;e+=4){f[e>>2]=d.charCodeAt(e)+(d.charCodeAt(e+1)<<8)+(d.charCodeAt(e+2)<<16)+(d.charCodeAt(e+3)<<24)}return f}var hex_chr="0123456789abcdef".split("");function rhex(f){var d="",e=0;for(;e<4;e++){d+=hex_chr[(f>>(e*8+4))&15]+hex_chr[(f>>(e*8))&15]}return d}function hex(d){for(var c=0;c<d.length;c++){d[c]=rhex(d[c])}return d.join("")}function md5(b){return hex(md51(b))}function add32(a,b){return(a+b)&4294967295}if(md5("hello")!="5d41402abc4b2a76b9719d911017c592"){function add32(f,g){var h=(f&65535)+(g&65535),e=(f>>16)+(g>>16)+(h>>16);return(e<<16)|(h&65535)}}var templates={Stream:'<div class="gha-feed">{{{text}}}<div class="gha-push-small"></div>{{{footer}}}</div>',Activity:'<div id="{{id}}" class="gha-activity">               <div class="gha-activity-icon"><span class="octicon octicon-{{icon}}"></span></div>               <div class="gha-message"><div class="gha-time">{{{timeString}}}</div>{{{userLink}}} {{{message}}}</div>               <div class="gha-clear"></div>             </div>',SingleLineActivity:'<div class="gha-activity gha-small">                         <div class="gha-activity-icon"><span class="octicon octicon-{{icon}}"></span></div>                         <div class="gha-message">{{{userLink}}} {{{message}}}</div><div class="gha-time">{{{timeString}}}</div>                         <div class="gha-clear"></div>                       </div>',UserHeader:'<div class="gha-header">                 <div class="gha-github-icon"><span class="octicon octicon-mark-github"></span></div>                 <div class="gha-user-info{{withoutName}}">{{{userNameLink}}}<p>{{{userLink}}}</p></div>                 <div class="gha-gravatar">{{{gravatarLink}}}</div>               </div><div class="gha-push"></div>',Footer:'<div class="gha-footer">Public Activity <a href="https://github.com/caseyscarborough/github-activity" target="_blank">GitHub Activity Stream</a>',NoActivity:'<div class="gha-info">This user does not have any public activity yet.</div>',NotFound:'<div class="gha-info">User {{username}} wasn\'t found.</div>',CommitCommentEvent:"commented on commit {{{commentLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",CreateEvent:"created {{payload.ref_type}} {{{branchLink}}}{{{repoLink}}}",DeleteEvent:"deleted {{payload.ref_type}} {{payload.ref}} at {{{repoLink}}}",FollowEvent:"started following {{{targetLink}}}",ForkEvent:"forked {{{repoLink}}} to {{{forkLink}}}",GistEvent:"{{actionType}} {{{gistLink}}}",GollumEvent:"{{actionType}} the {{{repoLink}}} wiki<br>{{{userGravatar}}}<small>{{{message}}}</small>",IssueCommentEvent:"commented on {{issueType}} {{{issueLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",IssuesEvent:"{{payload.action}} issue {{{issueLink}}}<br>{{{userGravatar}}}<small>{{payload.issue.title}}</small>",MemberEvent:"added {{{memberLink}}} to {{{repoLink}}}",PublicEvent:"open sourced {{{repoLink}}}",PullRequestEvent:"{{payload.action}} pull request {{{pullRequestLink}}}<br>{{{userGravatar}}}<small>{{payload.pull_request.title}}</small>{{{mergeMessage}}}",PullRequestReviewCommentEvent:"commented on pull request {{{pullRequestLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",PushEvent:'pushed to {{{branchLink}}}{{{repoLink}}}<br>                <ul class="gha-commits">{{#payload.commits}}<li><small>{{{committerGravatar}}} {{{shaLink}}} {{message}}</small></li>{{/payload.commits}}</ul>                <small class="gha-message-commits">{{{commitsMessage}}}</small>',ReleaseEvent:'released {{{tagLink}}} at {{{repoLink}}}<br>{{{userGravatar}}}<small><span class="octicon octicon-cloud-download"></span>  {{{zipLink}}}</small>',WatchEvent:"starred {{{repoLink}}}"},icons={CommitCommentEvent:"comment-discussion",CreateEvent_repository:"repo-create",CreateEvent_tag:"tag-add",CreateEvent_branch:"git-branch-create",DeleteEvent:"repo-delete",FollowEvent:"person-follow",ForkEvent:"repo-forked",GistEvent:"gist",GollumEvent:"repo",IssuesEvent:"issue-opened",IssueCommentEvent:"comment-discussion",MemberEvent:"person",PublicEvent:"globe",PullRequestEvent:"git-pull-request",PullRequestReviewCommentEvent:"comment-discussion",PushEvent:"git-commit",ReleaseEvent:"tag-add",WatchEvent:"star"},singleLineActivities=["CreateEvent","DeleteEvent","FollowEvent","ForkEvent","GistEvent","MemberEvent","WatchEvent"];